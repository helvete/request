#!/usr/bin/env php
<?php
$time = -microtime(true);

define('SCRIPT_VERSION', '0.34');
define('FILE', 'C1cHmKNQr1f7gB2YXr7w');
define('OPT_X', 'x');
define('OPT_N', 'n');
define('OPT_H', 'h');
define('OPT_I', 'H');
define('OPT_L', 'l');
define('OPT_A', 'a');
define('OPT_P', 'p');

include __DIR__ . "/ApiRequester/Client.php";
include __DIR__ . "/ApiRequester/ResultDto.php";

$options = _processParams();
if ($options[OPT_H] || empty($options[FILE])) {
	_printHelp();
	exit(0);
}

$r = new helvete\ApiRequester\Client($options[FILE], $options[OPT_A]);
$result = $r->setFollowRedirect(!$options[OPT_L])->request();
$key = "<-- [{$result->getStatusCode()}]";
$requestKey = "--> [{$r->getMethod()} {$r->getUrl()}]";
$iterate = array(
	$requestKey => $r->getReqStr(),
	$key => $result->getResponseBody(),
);

if ($options[OPT_P]) {
	$iterate[$requestKey] = (unset)$requestKey;
}

if ($options[OPT_X]) {
	echo $iterate[$key];
	exit(0);
}

$embed = '';
foreach ($iterate as $name => $data) {
	echo "{$embed}{$name}:\n";
	if ($options[OPT_N]) {
		echo $data;
	} else {
		if (empty($data)) {
			$embed = "\n";
			echo '""';
			continue;
		}
		print_r(
			json_encode(
				json_decode($data, true),
				JSON_PRETTY_PRINT|JSON_UNESCAPED_SLASHES|JSON_UNESCAPED_UNICODE
			)
		);
	}
	$embed = "\n";
}
$time += microtime(true);
$time = number_format($time, 2);
if ($options[OPT_I]) {
	echo "\n--- [HEADERS]:";
	foreach ($result->getHeaders() as $hName => $hVal) {
		echo "\n    " . strtoupper($hName) . ": {$hVal}";
	}
}
echo "${embed}Bye! (Request duration: {$time}s)\n";

/******************************************************************************/

/**
 * Proces runtime parameters and return them in a nicely readable way
 *
 * @return array
 */
function _processParams() {
	global $argv;
	$provided = array(
		OPT_X => false,
		OPT_N => false,
		OPT_H => false,
		OPT_I => false,
		OPT_L => false,
		OPT_P => false,
		OPT_A => helvete\ApiRequester\Client::UA_DEFAULT,
	);
	for ($i = 1; $i < count($argv); $i++) {
		switch ($argv[$i]) {
		case '-x':
		case '--exact-response':
			$provided[OPT_X] = true;
			break;
		case '-nx':
		case '-xn':
			$provided[OPT_X] = true;
		case '-n':
		case '--non-json':
			$provided[OPT_N] = true;
			break;
		case '-h':
		case '--help':
			$provided[OPT_H] = true;
			break;
		case '-H':
		case '--headers':
			$provided[OPT_I] = true;
			break;
		case '-l':
		case '--no-follow-redirect':
			$provided[OPT_L] = true;
			break;
		case '-a':
		case '--no-user-agent':
			$provided[OPT_A] = null;
			break;
		case '-p':
		case '--response-only':
			$provided[OPT_P] = true;
			break;
		default:
			if (!file_exists($argv[$i])) {
				echo "Unknown runtime param {$argv[$i]}\n";
				exit(2);
			}
			$provided[FILE] = $argv[$i];
		}
	}

	return $provided;
}


/**
 * Print help message
 *
 * @return void
 */
function _printHelp() {
	global $argv;
	$scriptVer = SCRIPT_VERSION;
	$libVer = \helvete\ApiRequester\Client::LIB_VERSION;
	$self = $argv[0];
	echo <<<TXT
Request remote APIs utility.
	Library version: $libVer
	Script version: $scriptVer
Usage:
	$self [-h|--help] [-H|--headers] [-n|--non-json] [-x|--exact-response]
		[-l|--no-follow-redirect] [-a|--no-user-agent] [-p|--response-only]
        <options file>
Parameters:
	-h|--help
		Print this help
	-H|--headers
		Print response headers
	-n|--non-json
		Script will not expect JSON response payload and will not attempt to
		format it on standard out
	-x|--exact-response
		Response will not be formatted. Only the actual response is printed.
		Useful for commands chaining
	-l|--no-follow-redirects
		Default behaviour is to follow any location redirects. Provide this flag
		in order for the client not to follow redirects
	-a|--no-user-agent
		User-agent header is being added by default. Provide this flag to omit it
	-p|--response-only
		Print only response, skip request. Useful for file uploads, etc.
	<options-file>
		Provided location of options file. See ./post-request-example for clues
Note:
	Short versions of -x and -n parameters can be combined like -xn or -nx.

TXT;
}
